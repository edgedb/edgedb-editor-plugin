<!-- AUTOGENERATED FROM grammars/EdgeDBSchema.syntax.yaml -->
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
  <dict>
    <key>name</key>
    <string>EdgeDBSchema</string>
    <key>scopeName</key>
    <string>source.eschema</string>
    <key>fileTypes</key>
    <array>
      <string>eschema</string>
    </array>
    <key>uuid</key>
    <string>a560aad6-9c13-49c5-a369-5fb272c8ec1a</string>
    <key>patterns</key>
    <array>
      <dict>
        <key>include</key>
        <string>#all</string>
      </dict>
    </array>
    <key>repository</key>
    <dict>
      <key>all</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#comments</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#import-parentheses</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#keywords</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#attributes</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#operators</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#names</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#eql-parentheses</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#eql-to-logical-eol</string>
          </dict>
        </array>
      </dict>
      <key>comments</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>comment.line.note.eschema</string>
            <key>match</key>
            <string>(#)\s*(BUG|FIXME|TODO|XXX).*$\n?</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.comment.eschema</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>comment.line.note.notation.eschema</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>name</key>
            <string>comment.line.number-sign.eschema</string>
            <key>match</key>
            <string>(#).*$\n?</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.comment.eschema</string>
              </dict>
            </dict>
          </dict>
        </array>
      </dict>
      <key>keywords</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>support.type.abstract.eschema</string>
            <key>match</key>
            <string>(?i)\b(abstract|final)\b</string>
          </dict>
          <dict>
            <key>name</key>
            <string>support.type.required.eschema</string>
            <key>match</key>
            <string>(?i)\b(required)\b</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.other.declaration.eschema</string>
            <key>match</key>
            <string>(?ix) \b(
  (?# schema-scpecific)
  linkproperty |

  (?# from EdgeQL)
  action | after | asc |
  attribute | before | by | constraint |
  database | delegated | desc | event | extending |
  first | for | from | index | initial | last | link |
  migration | of | policy | property | rename | scalar |
  target | then | transaction | type | value | view |

  aggregate | all | alter | and | commit | create | delete |
  distinct | drop | else | exists | filter |
  function | get | group | if | ilike | in | insert | is |
  like | limit | module | not | offset | or | order | over |
  partition | rollback | select | set | singleton | start |
  update | union | with
)\b
</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.operator.eschema</string>
            <key>match</key>
            <string>(?i)\b(as|import|on|to)\b</string>
          </dict>
          <dict>
            <key>name</key>
            <string>constant.language.boolean.true.eschema</string>
            <key>match</key>
            <string>(?i)\b(true)\b</string>
          </dict>
          <dict>
            <key>name</key>
            <string>constant.language.boolean.false.eschema</string>
            <key>match</key>
            <string>(?i)\b(false)\b</string>
          </dict>
        </array>
      </dict>
      <key>attributes</key>
      <dict>
        <key>name</key>
        <string>meta.attribute.eschema</string>
        <key>match</key>
        <string>(?x)
  ^\s+
    ([[:alpha:]_][[:alnum:]_]*)
      (?=\s*:=)
</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>variable.parameter.attribute.eschema</string>
          </dict>
        </dict>
      </dict>
      <key>operators</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>keyword.operator.namespace.eschema</string>
            <key>match</key>
            <string>(::)</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.declaration.eschema</string>
            <key>match</key>
            <string>(-&gt;)</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.declaration.eschema</string>
            <key>match</key>
            <string>(:=)</string>
          </dict>
        </array>
      </dict>
      <key>names</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>support.function.builtin.eschema</string>
            <key>match</key>
            <string>(?x) \b(?&lt;!\.) (
  len |
  array_agg | array_contains | array_enumerate | array_unpack |
  lower |
  re_match | re_match_all | re_test |
  count | sum |
  current_date | current_datetime | current_time |
  random | uuid_generate_v1mc
)(?=\s*\()\b
</string>
          </dict>
          <dict>
            <key>name</key>
            <string>support.function.constraint.builtin.eschema</string>
            <key>match</key>
            <string>(?x) \b(?&lt;!\.) (
  constraint | max | enum | expression | min | minexclusive |
  length | minlength | regexp | maxlength | maxexclusive | unique
)\b
</string>
          </dict>
          <dict>
            <key>name</key>
            <string>support.other.module.builtin.eschema</string>
            <key>match</key>
            <string>(?x) \b(?&lt;!::|\.)(
  std | stdattrs | schema
)\b
</string>
          </dict>
          <dict>
            <key>name</key>
            <string>support.type.builtin.eschema</string>
            <key>match</key>
            <string>(?x) \b(
  array | map | tuple |

  bytes | datetime | uuid | str | json | timedelta | date |
  time | int | float | bool | auto | any
)\b
</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#quoted-name</string>
          </dict>
        </array>
      </dict>
      <key>quoted-name</key>
      <dict>
        <key>name</key>
        <string>string.interpolated.eschema</string>
        <key>match</key>
        <string>(`.*?`)</string>
      </dict>
      <key>import-parentheses</key>
      <dict>
        <key>begin</key>
        <string>(?i)(?&lt;=import)\s*(\()</string>
        <key>end</key>
        <string>(\))</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>punctuation.parenthesis.begin.eschema</string>
          </dict>
        </dict>
        <key>endCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>punctuation.parenthesis.end.eschema</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#comments</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#keywords</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#names</string>
          </dict>
        </array>
      </dict>
      <key>eql-parentheses</key>
      <dict>
        <key>begin</key>
        <string>(\()</string>
        <key>end</key>
        <string>(\))</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>punctuation.parenthesis.begin.eschema</string>
          </dict>
        </dict>
        <key>endCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>punctuation.parenthesis.end.eschema</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>source.edgeql</string>
          </dict>
        </array>
      </dict>
      <key>eql-to-logical-eol</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>(?i)(?&lt;=-&gt;|to|extending)\s*(?!\()</string>
            <key>end</key>
            <string>(?=$)|(?&lt;!:)(?=:(?!:))</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>source.edgeql</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>begin</key>
            <string>(?&lt;=:=)\s*(?=\S.*$)</string>
            <key>end</key>
            <string>(\s*$\n)</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>source.edgeql</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>begin</key>
            <string>(?&lt;=:=)\s*$\n</string>
            <key>end</key>
            <string>(\s*$\n)</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>source.edgeql</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
    </dict>
  </dict>
</plist>
