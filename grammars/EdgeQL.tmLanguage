<!-- AUTOGENERATED FROM grammars/EdgeQL.syntax.yaml -->
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
  <dict>
    <key>name</key>
    <string>EdgeQL</string>
    <key>scopeName</key>
    <string>source.edgeql</string>
    <key>fileTypes</key>
    <array>
      <string>eql</string>
    </array>
    <key>uuid</key>
    <string>a560aad6-9c13-49c5-a369-5fb272c8ec1a</string>
    <key>patterns</key>
    <array>
      <dict>
        <key>include</key>
        <string>#all</string>
      </dict>
    </array>
    <key>repository</key>
    <dict>
      <key>all</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#fnstatement</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#expressions</string>
          </dict>
          <dict>
            <key>name</key>
            <string>punctuation.statement.delimiter.edgeql</string>
            <key>match</key>
            <string>(;)</string>
          </dict>
        </array>
      </dict>
      <key>expressions</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#comments</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#code</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#keywords</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#fncalls</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#operators</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#builtins</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#types</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#quoted-name</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#values</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#link-properties</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#variables</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#parentheses</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#squarebraces</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#curlybraces</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#casts</string>
          </dict>
        </array>
      </dict>
      <key>code</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>(?xi)
  \b(FROM) \s+
  (SQL) \s+
  (\$\w?\$)
</string>
            <key>end</key>
            <string>(\3)</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>keyword.declaration.edgeql</string>
              </dict>
              <key>3</key>
              <dict>
                <key>name</key>
                <string>string.quoted.edgeql</string>
              </dict>
            </dict>
            <key>endCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>string.quoted.edgeql</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>source.sql</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>begin</key>
            <string>(?xi)
  \b(FROM) \s+
  (EDGEQL) \s+
  (\$\w?\$)
</string>
            <key>end</key>
            <string>(\3)</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>keyword.declaration.edgeql</string>
              </dict>
              <key>3</key>
              <dict>
                <key>name</key>
                <string>string.quoted.edgeql</string>
              </dict>
            </dict>
            <key>endCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>string.quoted.edgeql</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>source.edgeql</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>fnstatement</key>
      <dict>
        <key>begin</key>
        <string>(?ix) \b(?&lt;![:\.])(FUNCTION|AGGREGATE|CONSTRAINT)\b</string>
        <key>end</key>
        <string>(?=[^\s\w:]|\bEXTENDING\b|$)</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.declaration.edgeql</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#builtins</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#identifier</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.operator.namespace.edgeql</string>
            <key>match</key>
            <string>(::)</string>
          </dict>
        </array>
      </dict>
      <key>fncalls</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>meta.function-call.edgeql</string>
            <key>begin</key>
            <string>(?x)
  \b(?&lt;!\.)
  # function name
  (?:
    (
      len |
      array_agg | array_contains | array_enumerate | array_unpack |
      lower |
      re_match | re_match_all | re_test |
      count | sum |
      current_date | current_datetime | current_time |
      random | uuid_generate_v1mc
    )
    |
    ([[:alpha:]_][[:alnum:]_]*)
    |
    (`.*?`)
  ) \s*(\()
</string>
            <key>end</key>
            <string>(\))</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>support.function.builtin.edgeql</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>entity.name.function.edgeql</string>
              </dict>
              <key>3</key>
              <dict>
                <key>name</key>
                <string>string.interpolated.edgeql</string>
              </dict>
              <key>4</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.arguments.begin.edgeql</string>
              </dict>
            </dict>
            <key>endCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.arguments.end.edgeql</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#fncallargs</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>name</key>
            <string>meta.function-call.edgeql</string>
            <key>begin</key>
            <string>(?x)
  \b(?&lt;!\.)
  # module
  (?:
    (
      std | stdattrs | schema
    )
    |
    (?# masking built-ins in odd ways)
    (
      len |
      array_agg | array_contains | array_enumerate | array_unpack |
      lower |
      re_match | re_match_all | re_test |
      count | sum |
      current_date | current_datetime | current_time |
      random | uuid_generate_v1mc
    )
    |
    ([[:alpha:]_][[:alnum:]_]*)
    |
    (`.*?`)
  )

  \s*(::)\s*

  # function name
  (?:
    (
      len |
      array_agg | array_contains | array_enumerate | array_unpack |
      lower |
      re_match | re_match_all | re_test |
      count | sum |
      current_date | current_datetime | current_time |
      random | uuid_generate_v1mc
    )
    |
    ([[:alpha:]_][[:alnum:]_]*)
    |
    (`.*?`)
  ) \s*(\()
</string>
            <key>end</key>
            <string>(\))</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>support.other.module.builtin.edgeql</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>support.function.builtin.edgeql</string>
              </dict>
              <key>3</key>
              <dict>
                <key>name</key>
                <string>entity.name.function.edgeql</string>
              </dict>
              <key>4</key>
              <dict>
                <key>name</key>
                <string>string.interpolated.edgeql</string>
              </dict>
              <key>5</key>
              <dict>
                <key>name</key>
                <string>keyword.operator.namespace.edgeql</string>
              </dict>
              <key>6</key>
              <dict>
                <key>name</key>
                <string>support.function.builtin.edgeql</string>
              </dict>
              <key>7</key>
              <dict>
                <key>name</key>
                <string>entity.name.function.edgeql</string>
              </dict>
              <key>8</key>
              <dict>
                <key>name</key>
                <string>string.interpolated.edgeql</string>
              </dict>
              <key>9</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.arguments.begin.edgeql</string>
              </dict>
            </dict>
            <key>endCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.arguments.end.edgeql</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#fncallargs</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>fncallargs</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#definition</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#expressions</string>
          </dict>
          <dict>
            <key>name</key>
            <string>punctuation.separator.arguments.edgeql</string>
            <key>match</key>
            <string>(,)</string>
          </dict>
          <dict>
            <key>name</key>
            <string>invalid.illegal.delimiter.edgeql</string>
            <key>match</key>
            <string>(;)</string>
          </dict>
        </array>
      </dict>
      <key>definition</key>
      <dict>
        <key>match</key>
        <string>(?x)
  (?:
    ([[:alpha:]_][[:alnum:]_]*)
    |
    ([\.\d]\S*?)
  ) (?=\s*:=)
</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>variable.parameter.definition.edgeql</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>invalid.illegal.definition.edgeql</string>
          </dict>
        </dict>
      </dict>
      <key>parencommon</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>punctuation.separator.element.edgeql</string>
            <key>match</key>
            <string>(,)</string>
          </dict>
          <dict>
            <key>name</key>
            <string>invalid.illegal.delimiter.edgeql</string>
            <key>match</key>
            <string>(;)</string>
          </dict>
        </array>
      </dict>
      <key>parentheses</key>
      <dict>
        <key>begin</key>
        <string>(\()</string>
        <key>end</key>
        <string>(\))</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>punctuation.parenthesis.begin.edgeql</string>
          </dict>
        </dict>
        <key>endCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>punctuation.parenthesis.end.edgeql</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#expressions</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#parencommon</string>
          </dict>
        </array>
      </dict>
      <key>squarebraces</key>
      <dict>
        <key>begin</key>
        <string>(\[)</string>
        <key>end</key>
        <string>(\])</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>punctuation.parenthesis.begin.edgeql</string>
          </dict>
        </dict>
        <key>endCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>punctuation.parenthesis.end.edgeql</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>keyword.operator.edgeql</string>
            <key>match</key>
            <string>(^|\b|\s)(-&gt;)($|\b|\s)</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#expressions</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#parencommon</string>
          </dict>
        </array>
      </dict>
      <key>curlybraces</key>
      <dict>
        <key>begin</key>
        <string>(\{)</string>
        <key>end</key>
        <string>(\})</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>punctuation.parenthesis.begin.edgeql</string>
          </dict>
        </dict>
        <key>endCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>punctuation.parenthesis.end.edgeql</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#comments</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#commandblock</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#shape</string>
          </dict>
        </array>
      </dict>
      <key>commandblock</key>
      <dict>
        <key>begin</key>
        <string>(?=SET|CREATE|ALTER|DROP|RENAME|FROM)</string>
        <key>end</key>
        <string>(?=\})</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#all</string>
          </dict>
        </array>
      </dict>
      <key>shape</key>
      <dict>
        <key>begin</key>
        <string>(?=\S)</string>
        <key>end</key>
        <string>(?=\})</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#expressions</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#parencommon</string>
          </dict>
        </array>
      </dict>
      <key>comments</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>comment.line.note.edgeql</string>
            <key>match</key>
            <string>(#)\s*(BUG|FIXME|TODO|XXX).*$\n?</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.comment.edgeql</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>comment.line.note.notation.edgeql</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>name</key>
            <string>comment.line.number-sign.edgeql</string>
            <key>match</key>
            <string>(#).*$\n?</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.comment.edgeql</string>
              </dict>
            </dict>
          </dict>
        </array>
      </dict>
      <key>keywords</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>keyword.declaration.edgeql</string>
            <key>match</key>
            <string>(?ix) \b(?&lt;![:\.])(
  (?# unreserved)

  abstract | action | after | as | asc |
  attribute | before | by | constraint |
  database | delegated | desc | event | extending | final |
  first | for | from | index | initial | last | link |
  migration | of | policy | property | required | rename |
  scalar | target | then | to | transaction | type | value | view |

  (?# reserved)

  aggregate | all | alter | and | commit | create | delete |
  distinct | drop | else | exists | filter |
  function | get | group | if | ilike | in | insert | is |
  like | limit | module | not | offset | or | order | over |
  partition | rollback | select | set | singleton | start |
  update | union | with
)\b
</string>
          </dict>
          <dict>
            <key>name</key>
            <string>constant.language.boolean.true.edgeql</string>
            <key>match</key>
            <string>(?i)\b(TRUE)\b</string>
          </dict>
          <dict>
            <key>name</key>
            <string>constant.language.boolean.false.edgeql</string>
            <key>match</key>
            <string>(?i)\b(FALSE)\b</string>
          </dict>
          <dict>
            <key>name</key>
            <string>constant.language.empty.edgeql</string>
            <key>match</key>
            <string>(?i)\b(EMPTY)\b</string>
          </dict>
        </array>
      </dict>
      <key>operators</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>keyword.operator.namespace.edgeql</string>
            <key>match</key>
            <string>(::)</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.declaration.edgeql</string>
            <key>match</key>
            <string>-&gt;</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.operator.edgeql</string>
            <key>match</key>
            <string>(?x)
  # EdgeQL-specific multi-char ops
  &gt;= | &lt;= | != | \?= | \?!= | := |

  # single char operators
  [+\-*/%^&lt;&gt;=]
</string>
          </dict>
        </array>
      </dict>
      <key>builtins</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>support.function.builtin.edgeql</string>
            <key>match</key>
            <string>(?x) \b(?&lt;!\.) (
  len |
  array_agg | array_contains | array_enumerate | array_unpack |
  lower |
  re_match | re_match_all | re_test |
  count | sum |
  current_date | current_datetime | current_time |
  random | uuid_generate_v1mc
)(?=\s*\()\b
</string>
          </dict>
          <dict>
            <key>name</key>
            <string>support.function.constraint.builtin.edgeql</string>
            <key>match</key>
            <string>(?x) \b(?&lt;!\.) (
constraint | max | enum | expression | min | minexclusive |
length | minlength | regexp | maxlength | maxexclusive | unique
)\b
</string>
          </dict>
          <dict>
            <key>name</key>
            <string>support.other.module.builtin.edgeql</string>
            <key>match</key>
            <string>(?x) \b(?&lt;!::|\.)(
  std | stdattrs | schema
)\b
</string>
          </dict>
        </array>
      </dict>
      <key>types</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>\b(?&lt;!::|\.)(map)\s*(&lt;)</string>
            <key>end</key>
            <string>(&gt;)</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>storage.type.edgeql</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>storage.type.placeholder.begin.edgeql</string>
              </dict>
            </dict>
            <key>endCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>storage.type.placeholder.end.edgeql</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#types</string>
              </dict>
              <dict>
                <key>name</key>
                <string>punctuation.separator.type.edgeql</string>
                <key>match</key>
                <string>(,)</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#types-common</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>begin</key>
            <string>\b(?&lt;!::|\.)(tuple)\s*(&lt;)</string>
            <key>end</key>
            <string>(&gt;)</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>storage.type.edgeql</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>storage.type.placeholder.begin.edgeql</string>
              </dict>
            </dict>
            <key>endCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>storage.type.placeholder.end.edgeql</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#types</string>
              </dict>
              <dict>
                <key>name</key>
                <string>punctuation.separator.type.edgeql</string>
                <key>match</key>
                <string>(,)</string>
              </dict>
              <dict>
                <key>match</key>
                <string>(:)</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#types-common</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>begin</key>
            <string>\b(?&lt;!::|\.)(array)\s*(&lt;)</string>
            <key>end</key>
            <string>(&gt;)</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>storage.type.edgeql</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>storage.type.placeholder.begin.edgeql</string>
              </dict>
            </dict>
            <key>endCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>storage.type.placeholder.end.edgeql</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>name</key>
                <string>invalid.illegal.type.edgeql</string>
                <key>match</key>
                <string>array</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#types</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#array-dimensions</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#types-common</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>name</key>
            <string>storage.type.edgeql</string>
            <key>match</key>
            <string>(?x) \b(?&lt;!::|\.)(
  array | map | tuple
)\b
</string>
          </dict>
          <dict>
            <key>name</key>
            <string>support.type.builtin.edgeql</string>
            <key>match</key>
            <string>(?x) \b(?&lt;!\.) (
  bytes | datetime | uuid | str | json | timedelta | date |
  time | int | float | bool | auto | any
)\b
</string>
          </dict>
        </array>
      </dict>
      <key>types-common</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#identifier</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.operator.namespace.edgeql</string>
            <key>match</key>
            <string>(::)</string>
          </dict>
        </array>
      </dict>
      <key>array-dimensions</key>
      <dict>
        <key>begin</key>
        <string>(\[)</string>
        <key>end</key>
        <string>(\])</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>punctuation.parenthesis.begin.edgeql</string>
          </dict>
        </dict>
        <key>endCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>punctuation.parenthesis.end.edgeql</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>constant.numeric.edgeql</string>
            <key>match</key>
            <string>(\d+)</string>
          </dict>
          <dict>
            <key>name</key>
            <string>invalid.illegal.type.edgeql</string>
            <key>match</key>
            <string>\S+</string>
          </dict>
        </array>
      </dict>
      <key>variables</key>
      <dict>
        <key>name</key>
        <string>constant.language.variable.edgeql</string>
        <key>begin</key>
        <string>(\$)(?=[[:alnum:]_]|`)</string>
        <key>end</key>
        <string>(?&lt;=[[:alnum:]_`])</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#identifier</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#quoted-name</string>
          </dict>
          <dict>
            <key>match</key>
            <string>(\d)+</string>
          </dict>
        </array>
      </dict>
      <key>link-properties</key>
      <dict>
        <key>name</key>
        <string>support.other.linkproperty.edgeql</string>
        <key>begin</key>
        <string>(\@)</string>
        <key>end</key>
        <string>(?&lt;=[[:alnum:]_`])</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#identifier</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#quoted-name</string>
          </dict>
        </array>
      </dict>
      <key>identifier</key>
      <dict>
        <key>match</key>
        <string>([[:alpha:]_][[:alnum:]_]*)</string>
      </dict>
      <key>quoted-name</key>
      <dict>
        <key>name</key>
        <string>string.interpolated.edgeql</string>
        <key>match</key>
        <string>(`.*?`)</string>
      </dict>
      <key>values</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#number</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#string</string>
          </dict>
        </array>
      </dict>
      <key>number</key>
      <dict>
        <key>name</key>
        <string>constant.numeric.edgeql</string>
        <key>match</key>
        <string>(?x)
    (?:
      #decimal part
      \.(_*)(?:[0-9](?:[0-9_]*[0-9])?)
      |
      # integer part
      \b(?:[1-9](?:[0-9_]*[0-9])?|0)
        (?:\.(_*)[0-9](?:[0-9_]*[0-9])?)?
    )
    ((_*)([eE][\+\-]?)(_*)[0-9](?:[0-9_]*[0-9])?)?

  (_*)
  \b
</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>invalid.illegal.dec.edgeql</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>invalid.illegal.dec.edgeql</string>
          </dict>
          <key>4</key>
          <dict>
            <key>name</key>
            <string>invalid.illegal.dec.edgeql</string>
          </dict>
          <key>5</key>
          <dict>
            <key>name</key>
            <string>storage.type.number.edgeql</string>
          </dict>
          <key>6</key>
          <dict>
            <key>name</key>
            <string>invalid.illegal.dec.edgeql</string>
          </dict>
          <key>7</key>
          <dict>
            <key>name</key>
            <string>invalid.illegal.dec.edgeql</string>
          </dict>
        </dict>
      </dict>
      <key>string</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>string.quoted.edgeql</string>
            <key>begin</key>
            <string>(['"])</string>
            <key>end</key>
            <string>(\1)</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.string.begin.edgeql</string>
              </dict>
            </dict>
            <key>endCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.string.end.edgeql</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#string-escapes</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>name</key>
            <string>string.dollar.edgeql</string>
            <key>begin</key>
            <string>(\$([[:alpha:]_][[:alnum:]]*)*\$)</string>
            <key>end</key>
            <string>(\1)</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.string.begin.edgeql</string>
              </dict>
            </dict>
            <key>endCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.string.end.edgeql</string>
              </dict>
            </dict>
          </dict>
        </array>
      </dict>
      <key>string-escapes</key>
      <dict>
        <key>name</key>
        <string>constant.character.escape.edgeql</string>
        <key>match</key>
        <string>(\\['"])</string>
      </dict>
      <key>casts</key>
      <dict>
        <key>begin</key>
        <string>(?xi)
  (?:
    (?&lt;= ^ | [@~+\-*/%^&lt;&gt;=?,:(\[{])
    |
    (?&lt;=
      AND | OR | NOT | LIKE | ILIKE | IS | IN | IF | ELSE |
      UNION | ALL | EXISTS |

      SELECT | GROUP | UPDATE | BY | THEN | LIMIT |
      # there are some ligature-related issues with "fi" and "ff"
      F[Ii]LTER | OF[Ff]SET
    )
  ) \s* (\&lt;)
</string>
        <key>end</key>
        <string>(\&gt;)</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.operator.cast.begin.edgeql</string>
          </dict>
        </dict>
        <key>endCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.operator.cast.end.edgeql</string>
          </dict>
        </dict>
        <key>contentName</key>
        <string>meta.typecast.edgeql</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#types</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#types-common</string>
          </dict>
        </array>
      </dict>
    </dict>
  </dict>
</plist>
