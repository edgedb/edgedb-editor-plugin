<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
  <!-- AUTOGENERATED FROM grammars/src/edgeql.syntax.yaml -->
  <dict>
    <key>name</key>
    <string>EdgeQL</string>
    <key>scopeName</key>
    <string>source.edgeql</string>
    <key>fileTypes</key>
    <array>
      <string>edgeql</string>
      <string>esdl</string>
    </array>
    <key>uuid</key>
    <string>a560aad6-9c13-49c5-a369-5fb272c8ec1a</string>
    <key>patterns</key>
    <array>
      <dict>
        <key>include</key>
        <string>#all</string>
      </dict>
    </array>
    <key>repository</key>
    <dict>
      <key>all</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#fnstatement</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#expressions</string>
          </dict>
          <dict>
            <key>name</key>
            <string>punctuation.statement.delimiter.edgeql</string>
            <key>match</key>
            <string>(;)</string>
          </dict>
        </array>
      </dict>
      <key>expressions</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#comments</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#code</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#keywords</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#fncalls</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#operators</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#builtins</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#types</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#quoted-name</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#values</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#link-properties</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#variables</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#parentheses</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#squarebraces</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#curlybraces</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#casts</string>
          </dict>
        </array>
      </dict>
      <key>code</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>match</key>
            <string>(?xi)
  \b(FROM) \s+ (EDGEQL | SQL) \s+ (EXPRESSION)
</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>keyword.declaration.edgeql</string>
              </dict>
              <key>3</key>
              <dict>
                <key>name</key>
                <string>keyword.declaration.edgeql</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>begin</key>
            <string>(?xi)
  \b(FROM) \s+
  (SQL) \s+
  (\$\w?\$)
</string>
            <key>end</key>
            <string>(\3)</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>keyword.declaration.edgeql</string>
              </dict>
              <key>3</key>
              <dict>
                <key>name</key>
                <string>string.quoted.edgeql</string>
              </dict>
            </dict>
            <key>endCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>string.quoted.edgeql</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>source.sql</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>begin</key>
            <string>(?xi)
  \b(FROM) \s+
  (EDGEQL) \s+
  (\$\w?\$)
</string>
            <key>end</key>
            <string>(\3)</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>keyword.declaration.edgeql</string>
              </dict>
              <key>3</key>
              <dict>
                <key>name</key>
                <string>string.quoted.edgeql</string>
              </dict>
            </dict>
            <key>endCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>string.quoted.edgeql</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>source.edgeql</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>fnstatement</key>
      <dict>
        <key>begin</key>
        <string>(?ix) \b(?&lt;![:\.])(FUNCTION|AGGREGATE|ABSTRACT CONSTRAINT)\b</string>
        <key>end</key>
        <string>(?=[^\s\w:]|\bEXTENDING\b|$)</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.declaration.edgeql</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#builtins</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#identifier</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.operator.namespace.edgeql</string>
            <key>match</key>
            <string>(::)</string>
          </dict>
        </array>
      </dict>
      <key>fncallargs</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#definition</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#expressions</string>
          </dict>
          <dict>
            <key>name</key>
            <string>punctuation.separator.arguments.edgeql</string>
            <key>match</key>
            <string>(,)</string>
          </dict>
          <dict>
            <key>name</key>
            <string>invalid.illegal.delimiter.edgeql</string>
            <key>match</key>
            <string>(;)</string>
          </dict>
        </array>
      </dict>
      <key>definition</key>
      <dict>
        <key>match</key>
        <string>(?x)
  (?:
    ([[:alpha:]_][[:alnum:]_]*)
    |
    ([\.\d]\S*?)
  ) (?=\s*:=)
</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>variable.parameter.definition.edgeql</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>invalid.illegal.definition.edgeql</string>
          </dict>
        </dict>
      </dict>
      <key>parencommon</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>punctuation.separator.element.edgeql</string>
            <key>match</key>
            <string>(,)</string>
          </dict>
          <dict>
            <key>name</key>
            <string>invalid.illegal.delimiter.edgeql</string>
            <key>match</key>
            <string>(;)</string>
          </dict>
        </array>
      </dict>
      <key>parentheses</key>
      <dict>
        <key>begin</key>
        <string>(\()</string>
        <key>end</key>
        <string>(\))</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>punctuation.parenthesis.begin.edgeql</string>
          </dict>
        </dict>
        <key>endCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>punctuation.parenthesis.end.edgeql</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#expressions</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#parencommon</string>
          </dict>
        </array>
      </dict>
      <key>squarebraces</key>
      <dict>
        <key>begin</key>
        <string>(\[)</string>
        <key>end</key>
        <string>(\])</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>punctuation.parenthesis.begin.edgeql</string>
          </dict>
        </dict>
        <key>endCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>punctuation.parenthesis.end.edgeql</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>keyword.operator.edgeql</string>
            <key>match</key>
            <string>(^|\b|\s)(-&gt;)($|\b|\s)</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#expressions</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#parencommon</string>
          </dict>
        </array>
      </dict>
      <key>curlybraces</key>
      <dict>
        <key>begin</key>
        <string>(\{)</string>
        <key>end</key>
        <string>(\})</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>punctuation.parenthesis.begin.edgeql</string>
          </dict>
        </dict>
        <key>endCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>punctuation.parenthesis.end.edgeql</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#comments</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#commandblock</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#shape</string>
          </dict>
        </array>
      </dict>
      <key>commandblock</key>
      <dict>
        <key>begin</key>
        <string>(?=SET|CREATE|ALTER|DROP|RENAME|FROM)</string>
        <key>end</key>
        <string>(?=\})</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#all</string>
          </dict>
        </array>
      </dict>
      <key>shape</key>
      <dict>
        <key>begin</key>
        <string>(?=\S)</string>
        <key>end</key>
        <string>(?=\})</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>punctuation.statement.delimiter.edgeql</string>
            <key>match</key>
            <string>(;)</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#expressions</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#parencommon</string>
          </dict>
        </array>
      </dict>
      <key>comments</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>comment.line.number-sign.edgeql</string>
            <key>match</key>
            <string>(#)\s*((BUG|FIXME|TODO|XXX)).*$\n?</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.comment.edgeql</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>comment.line.note.notation.edgeql</string>
              </dict>
              <key>3</key>
              <dict>
                <key>name</key>
                <string>comment.line.note.edgeql</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>name</key>
            <string>comment.line.number-sign.edgeql</string>
            <key>match</key>
            <string>(#).*$\n?</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.comment.edgeql</string>
              </dict>
            </dict>
          </dict>
        </array>
      </dict>
      <key>keywords</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>constant.language.boolean.true.edgeql</string>
            <key>match</key>
            <string>(?i)\b(TRUE)\b</string>
          </dict>
          <dict>
            <key>name</key>
            <string>constant.language.boolean.false.edgeql</string>
            <key>match</key>
            <string>(?i)\b(FALSE)\b</string>
          </dict>
          <dict>
            <key>name</key>
            <string>constant.language.empty.edgeql</string>
            <key>match</key>
            <string>(?i)\b(EMPTY)\b</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.declaration.edgeql</string>
            <key>match</key>
            <string>(?i)\b(?&lt;!::|\.|\.&lt;|\.&gt;)(CONSTRAINT)\b(?!=\s+\()</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.declaration.edgeql</string>
            <key>match</key>
            <string>(?ix) \b(?&lt;!::|\.|\.&lt;|\.&gt;)(
  (?# special case)
  (named \s+ only)
  |
  (as \s+ text)
  |

  (?# unreserved)
  abstract | after | alias | all | allow |
  annotation | as | asc | assignment | before |
  by | cardinality | cast | config | conflict |
  current | database | ddl | default | deferrable |
  deferred | delegated | desc | emit | explicit |
  final | first | from | function | implicit |
  index | infix | inheritable | into | isolation |
  last | link | migration | multi | object |
  of | oids | on | only | onto |
  operator | overloaded | owned | postfix | prefix |
  property | proposed | pseudo | read | reject |
  rename | repeatable | required | restrict | role |
  roles | savepoint | scalar | schema | sdl |
  serializable | session | single | source | superuser |
  system | target | ternary | then | to |
  transaction | type | unless | using | verbose |
  view | write
  |
  (?# reserved)
  abort | alter | analyze | and | anyarray |
  anytuple | begin | case | check | commit |
  configure | create | deallocate | declare | delete |
  describe | detached | discard | distinct | do |
  drop | else | empty | end | execute |
  exists | explain | extending | fetch | filter |
  for | get | global | grant | group |
  if | ilike | import | in | insert |
  introspect | is | like | limit | listen |
  load | lock | match | module | move |
  not | notify | offset | optional | or |
  order | over | partition | policy | populate |
  prepare | raise | refresh | reindex | release |
  reset | revoke | rollback | select | set |
  start | typeof | union | update | variadic |
  when | window | with
)\b
</string>
          </dict>
        </array>
      </dict>
      <key>operators</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>keyword.operator.navigation.edgeql</string>
            <key>match</key>
            <string>(\.[&lt;&gt;])</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.operator.namespace.edgeql</string>
            <key>match</key>
            <string>(::)</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.declaration.edgeql</string>
            <key>match</key>
            <string>-&gt;</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.operator.edgeql</string>
            <key>match</key>
            <string>(?x)
  \?\!\= | \?\? | \?\= | \&gt;\= | \&lt;\= | \:\= | \/\/ | \+\+ |
  \!\= | \^ | \&gt; | \= | \&lt; | \/ | \- | \+ |
  \* | \%
</string>
          </dict>
        </array>
      </dict>
      <key>types</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>\b(?&lt;!::|\.)(tuple)\s*(&lt;)</string>
            <key>end</key>
            <string>(&gt;)</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>storage.type.edgeql</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>storage.type.placeholder.begin.edgeql</string>
              </dict>
            </dict>
            <key>endCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>storage.type.placeholder.end.edgeql</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#types</string>
              </dict>
              <dict>
                <key>name</key>
                <string>punctuation.separator.type.edgeql</string>
                <key>match</key>
                <string>(,)</string>
              </dict>
              <dict>
                <key>match</key>
                <string>(:)</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#types-common</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>begin</key>
            <string>\b(?&lt;!::|\.)(array)\s*(&lt;)</string>
            <key>end</key>
            <string>(&gt;)</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>storage.type.edgeql</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>storage.type.placeholder.begin.edgeql</string>
              </dict>
            </dict>
            <key>endCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>storage.type.placeholder.end.edgeql</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>name</key>
                <string>invalid.illegal.type.edgeql</string>
                <key>match</key>
                <string>array</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#types</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#array-dimensions</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#types-common</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>name</key>
            <string>storage.type.edgeql</string>
            <key>match</key>
            <string>(?x) \b(?&lt;!::|\.)(
  array | tuple
)\b
</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#builtin-modules</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#builtin-types</string>
          </dict>
        </array>
      </dict>
      <key>types-common</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#identifier</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.operator.namespace.edgeql</string>
            <key>match</key>
            <string>(::)</string>
          </dict>
        </array>
      </dict>
      <key>array-dimensions</key>
      <dict>
        <key>begin</key>
        <string>(\[)</string>
        <key>end</key>
        <string>(\])</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>punctuation.parenthesis.begin.edgeql</string>
          </dict>
        </dict>
        <key>endCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>punctuation.parenthesis.end.edgeql</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>constant.numeric.edgeql</string>
            <key>match</key>
            <string>(\d+)</string>
          </dict>
          <dict>
            <key>name</key>
            <string>invalid.illegal.type.edgeql</string>
            <key>match</key>
            <string>\S+</string>
          </dict>
        </array>
      </dict>
      <key>variables</key>
      <dict>
        <key>name</key>
        <string>constant.language.variable.edgeql</string>
        <key>begin</key>
        <string>(\$)(?=[[:alnum:]_]|`)</string>
        <key>end</key>
        <string>(?&lt;=[[:alnum:]_`])</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#identifier</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#quoted-name</string>
          </dict>
          <dict>
            <key>match</key>
            <string>(\d)+</string>
          </dict>
        </array>
      </dict>
      <key>link-properties</key>
      <dict>
        <key>name</key>
        <string>support.other.linkproperty.edgeql</string>
        <key>begin</key>
        <string>(\@)</string>
        <key>end</key>
        <string>(?&lt;=[[:alnum:]_`])</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#identifier</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#quoted-name</string>
          </dict>
        </array>
      </dict>
      <key>identifier</key>
      <dict>
        <key>match</key>
        <string>([[:alpha:]_][[:alnum:]_]*)</string>
      </dict>
      <key>quoted-name</key>
      <dict>
        <key>name</key>
        <string>string.interpolated.edgeql</string>
        <key>match</key>
        <string>(`.*?`)</string>
      </dict>
      <key>values</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#number</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#bytes</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#string</string>
          </dict>
        </array>
      </dict>
      <key>number</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>constant.numeric.float.edgeql</string>
            <key>match</key>
            <string>(?x)
  (?:
    #decimal part
    \.(_*)(?:[0-9](?:[0-9_]*[0-9])?)
    |
    # integer part
    \b(?: [1-9](?: [0-9_]*[0-9] )? | 0 )
      (?:\.(_*)[0-9](?:[0-9_]*[0-9])?)
  )
  ((_*)([eE][\+\-]?)(_*)[0-9](?:[0-9_]*[0-9])?)?

  (_*)
  \b
</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>invalid.illegal.dec.edgeql</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>invalid.illegal.dec.edgeql</string>
              </dict>
              <key>4</key>
              <dict>
                <key>name</key>
                <string>invalid.illegal.dec.edgeql</string>
              </dict>
              <key>5</key>
              <dict>
                <key>name</key>
                <string>storage.type.number.edgeql</string>
              </dict>
              <key>6</key>
              <dict>
                <key>name</key>
                <string>invalid.illegal.dec.edgeql</string>
              </dict>
              <key>7</key>
              <dict>
                <key>name</key>
                <string>invalid.illegal.dec.edgeql</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>name</key>
            <string>constant.numeric.float.edgeql</string>
            <key>match</key>
            <string>(?x)
  (?:
    # integer part
    \b(?:[1-9](?:[0-9_]*[0-9])?|0)
  )
  ((_*)([eE][\+\-]?)(_*)[0-9](?:[0-9_]*[0-9])?)

  (_*)
  \b
</string>
            <key>captures</key>
            <dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>invalid.illegal.dec.edgeql</string>
              </dict>
              <key>3</key>
              <dict>
                <key>name</key>
                <string>storage.type.number.edgeql</string>
              </dict>
              <key>4</key>
              <dict>
                <key>name</key>
                <string>invalid.illegal.dec.edgeql</string>
              </dict>
              <key>5</key>
              <dict>
                <key>name</key>
                <string>invalid.illegal.dec.edgeql</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>name</key>
            <string>constant.numeric.decimal.edgeql</string>
            <key>match</key>
            <string>(?x)
  (?:
    #decimal part
    \.(_*)(?:[0-9](?:[0-9_]*[0-9])?)
    |
    # integer part
    \b(?:[1-9](?:[0-9_]*[0-9])?|0)
      (?:\.(_*)[0-9](?:[0-9_]*[0-9])?)?
  )
  ((_*)([eE][\+\-]?)(_*)[0-9](?:[0-9_]*[0-9])?)?

  (_*)
  (n)
</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>invalid.illegal.dec.edgeql</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>invalid.illegal.dec.edgeql</string>
              </dict>
              <key>4</key>
              <dict>
                <key>name</key>
                <string>invalid.illegal.dec.edgeql</string>
              </dict>
              <key>5</key>
              <dict>
                <key>name</key>
                <string>storage.type.number.edgeql</string>
              </dict>
              <key>6</key>
              <dict>
                <key>name</key>
                <string>invalid.illegal.dec.edgeql</string>
              </dict>
              <key>7</key>
              <dict>
                <key>name</key>
                <string>invalid.illegal.dec.edgeql</string>
              </dict>
              <key>8</key>
              <dict>
                <key>name</key>
                <string>storage.type.number.edgeql</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>name</key>
            <string>constant.numeric.integer.edgeql</string>
            <key>match</key>
            <string>(?x)
  (?:
    # integer part
    \b(?:[1-9](?:[0-9_]*[0-9])?|0)
  )
  (_*)
  \b
</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>invalid.illegal.dec.edgeql</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>invalid.illegal.dec.edgeql</string>
              </dict>
            </dict>
          </dict>
        </array>
      </dict>
      <key>string</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>string.quoted.raw.edgeql</string>
            <key>begin</key>
            <string>(r)(['"])</string>
            <key>end</key>
            <string>(\2)</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>storage.type.string.edgeql</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.string.begin.edgeql</string>
              </dict>
            </dict>
            <key>endCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.string.end.edgeql</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>name</key>
            <string>string.quoted.edgeql</string>
            <key>begin</key>
            <string>(['"])</string>
            <key>end</key>
            <string>(\1)</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.string.begin.edgeql</string>
              </dict>
            </dict>
            <key>endCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.string.end.edgeql</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#string-escapes</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#string-invalid-escapes</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>name</key>
            <string>string.dollar.edgeql</string>
            <key>begin</key>
            <string>(\$([[:alpha:]_][[:alnum:]]*)*\$)</string>
            <key>end</key>
            <string>(\1)</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.string.begin.edgeql</string>
              </dict>
            </dict>
            <key>endCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.string.end.edgeql</string>
              </dict>
            </dict>
          </dict>
        </array>
      </dict>
      <key>string-escapes</key>
      <dict>
        <key>name</key>
        <string>constant.character.escape.edgeql</string>
        <key>match</key>
        <string>(?x)
  (
    \\(?=\s*\n) |
    \\[\\'"bfnrt] |
    \\x[0-7][0-9a-fA-F] |
    \\u[0-9a-fA-F]{4} |
    \\U[0-9a-fA-F]{8}
  )
</string>
      </dict>
      <key>string-invalid-escapes</key>
      <dict>
        <key>name</key>
        <string>invalid.illegal.escapes.edgeql</string>
        <key>match</key>
        <string>(\\.)</string>
      </dict>
      <key>bytes</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>string.quoted.bytes.edgeql</string>
            <key>begin</key>
            <string>(b)(')</string>
            <key>end</key>
            <string>(\2)</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>storage.type.string.edgeql</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.string.begin.edgeql</string>
              </dict>
            </dict>
            <key>endCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.string.end.edgeql</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#bytes-escapes</string>
              </dict>
              <dict>
                <key>match</key>
                <string>([\n -&amp;(-\[\]-~])+</string>
              </dict>
              <dict>
                <key>name</key>
                <string>invalid.illegal.bytes.edgeql</string>
                <key>match</key>
                <string>(\\x.{1,2})|(\\.)|(.)</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>name</key>
            <string>string.quoted.bytes.edgeql</string>
            <key>begin</key>
            <string>(b)(")</string>
            <key>end</key>
            <string>(\2)</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>storage.type.string.edgeql</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.string.begin.edgeql</string>
              </dict>
            </dict>
            <key>endCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.string.end.edgeql</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#bytes-escapes</string>
              </dict>
              <dict>
                <key>match</key>
                <string>([\n -!#-\[\]-~])+</string>
              </dict>
              <dict>
                <key>name</key>
                <string>invalid.illegal.bytes.edgeql</string>
                <key>match</key>
                <string>(\\x.{1,2})|(\\.)|(.)</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>bytes-escapes</key>
      <dict>
        <key>name</key>
        <string>constant.character.escape.edgeql</string>
        <key>match</key>
        <string>(?x)
  (
    \\[\\'"bfnrt] |
    \\x[0-9a-fA-F]{2}
  )
</string>
      </dict>
      <key>casts</key>
      <dict>
        <key>begin</key>
        <string>(?xi)
  (?:
    (?&lt;= ^ | [@~+\-*/%^&lt;&gt;=?,:(\[{])
    |
    (?&lt;=
      AND | OR | NOT | LIKE | ILIKE | IS | IN | IF | ELSE |
      UNION | ALL | EXISTS |

      SELECT | GROUP | UPDATE | BY | THEN | LIMIT |
      # there are some ligature-related issues with "fi" and "ff"
      F[Ii]LTER | OF[Ff]SET
    )
  ) \s* (\&lt;)
</string>
        <key>end</key>
        <string>(\&gt;)</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.operator.cast.begin.edgeql</string>
          </dict>
        </dict>
        <key>endCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.operator.cast.end.edgeql</string>
          </dict>
        </dict>
        <key>contentName</key>
        <string>meta.typecast.edgeql</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#types</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#types-common</string>
          </dict>
        </array>
      </dict>
      <key>fncalls</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>meta.function-call.edgeql</string>
            <key>begin</key>
            <string>(?x)
  \b(?&lt;!\.|\.&lt;|\.&gt;)
  # function name
  (?:
    (
      # functions
      abs | advisory_lock | advisory_unlock |
      advisory_unlock_all | all | any |
      array_agg | array_get | array_join |
      array_unpack | bytes_get_bit | ceil |
      contains | count | date_get |
      datetime_current | datetime_get | datetime_of_statement |
      datetime_of_transaction | datetime_truncate | duration_to_seconds |
      duration_truncate | enumerate | find |
      floor | get_current_database | get_transaction_isolation |
      get_version | get_version_as_str | json_array_unpack |
      json_get | json_object_unpack | json_typeof |
      len | lg | ln |
      log | max | mean |
      min | random | re_match |
      re_match_all | re_replace | re_test |
      round | sleep | stddev |
      stddev_pop | str_lower | str_lpad |
      str_ltrim | str_pad_end | str_pad_start |
      str_repeat | str_rpad | str_rtrim |
      str_split | str_title | str_trim |
      str_trim_end | str_trim_start | str_upper |
      sum | time_get | to_bigint |
      to_datetime | to_decimal | to_duration |
      to_float32 | to_float64 | to_int16 |
      to_int32 | to_int64 | to_json |
      to_local_date | to_local_datetime | to_local_time |
      to_str | uuid_generate_v1mc | var |
      var_pop
    |
      # constraints
      constraint | exclusive | expression |
      len_value | max_ex_value | max_len_value |
      max_value | min_ex_value | min_len_value |
      min_value | one_of | regexp
    )
    |
    ([[:alpha:]_][[:alnum:]_]*)
    |
    (`.*?`)
  ) \s*(\()
</string>
            <key>end</key>
            <string>(\))</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>support.function.builtin.edgeql</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>entity.name.function.edgeql</string>
              </dict>
              <key>3</key>
              <dict>
                <key>name</key>
                <string>string.interpolated.edgeql</string>
              </dict>
              <key>4</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.arguments.begin.edgeql</string>
              </dict>
            </dict>
            <key>endCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.arguments.end.edgeql</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#fncallargs</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>name</key>
            <string>meta.function-call.edgeql</string>
            <key>begin</key>
            <string>(?x)
  \b(?&lt;!\.|\.&lt;|\.&gt;)
  # module
  (?:
    (
      cal | cfg | math |
      schema | std | stdgraphql |
      sys
    )
    |
    (?# masking built-ins in odd ways)
    (
      #functions
      abs | advisory_lock | advisory_unlock |
      advisory_unlock_all | all | any |
      array_agg | array_get | array_join |
      array_unpack | bytes_get_bit | ceil |
      contains | count | date_get |
      datetime_current | datetime_get | datetime_of_statement |
      datetime_of_transaction | datetime_truncate | duration_to_seconds |
      duration_truncate | enumerate | find |
      floor | get_current_database | get_transaction_isolation |
      get_version | get_version_as_str | json_array_unpack |
      json_get | json_object_unpack | json_typeof |
      len | lg | ln |
      log | max | mean |
      min | random | re_match |
      re_match_all | re_replace | re_test |
      round | sleep | stddev |
      stddev_pop | str_lower | str_lpad |
      str_ltrim | str_pad_end | str_pad_start |
      str_repeat | str_rpad | str_rtrim |
      str_split | str_title | str_trim |
      str_trim_end | str_trim_start | str_upper |
      sum | time_get | to_bigint |
      to_datetime | to_decimal | to_duration |
      to_float32 | to_float64 | to_int16 |
      to_int32 | to_int64 | to_json |
      to_local_date | to_local_datetime | to_local_time |
      to_str | uuid_generate_v1mc | var |
      var_pop
      |
      #constraints
      constraint | exclusive | expression |
      len_value | max_ex_value | max_len_value |
      max_value | min_ex_value | min_len_value |
      min_value | one_of | regexp
    )
    |
    ([[:alpha:]_][[:alnum:]_]*)
    |
    (`.*?`)
  )

  \s*(::)\s*

  # function name
  (?:
    (
      #functions
      abs | advisory_lock | advisory_unlock |
      advisory_unlock_all | all | any |
      array_agg | array_get | array_join |
      array_unpack | bytes_get_bit | ceil |
      contains | count | date_get |
      datetime_current | datetime_get | datetime_of_statement |
      datetime_of_transaction | datetime_truncate | duration_to_seconds |
      duration_truncate | enumerate | find |
      floor | get_current_database | get_transaction_isolation |
      get_version | get_version_as_str | json_array_unpack |
      json_get | json_object_unpack | json_typeof |
      len | lg | ln |
      log | max | mean |
      min | random | re_match |
      re_match_all | re_replace | re_test |
      round | sleep | stddev |
      stddev_pop | str_lower | str_lpad |
      str_ltrim | str_pad_end | str_pad_start |
      str_repeat | str_rpad | str_rtrim |
      str_split | str_title | str_trim |
      str_trim_end | str_trim_start | str_upper |
      sum | time_get | to_bigint |
      to_datetime | to_decimal | to_duration |
      to_float32 | to_float64 | to_int16 |
      to_int32 | to_int64 | to_json |
      to_local_date | to_local_datetime | to_local_time |
      to_str | uuid_generate_v1mc | var |
      var_pop
      |
      #constraints
      constraint | exclusive | expression |
      len_value | max_ex_value | max_len_value |
      max_value | min_ex_value | min_len_value |
      min_value | one_of | regexp
    )
    |
    ([[:alpha:]_][[:alnum:]_]*)
    |
    (`.*?`)
  ) \s*(\()
</string>
            <key>end</key>
            <string>(\))</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>support.other.module.builtin.edgeql</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>support.function.builtin.edgeql</string>
              </dict>
              <key>3</key>
              <dict>
                <key>name</key>
                <string>entity.name.function.edgeql</string>
              </dict>
              <key>4</key>
              <dict>
                <key>name</key>
                <string>string.interpolated.edgeql</string>
              </dict>
              <key>5</key>
              <dict>
                <key>name</key>
                <string>keyword.operator.namespace.edgeql</string>
              </dict>
              <key>6</key>
              <dict>
                <key>name</key>
                <string>support.function.builtin.edgeql</string>
              </dict>
              <key>7</key>
              <dict>
                <key>name</key>
                <string>entity.name.function.edgeql</string>
              </dict>
              <key>8</key>
              <dict>
                <key>name</key>
                <string>string.interpolated.edgeql</string>
              </dict>
              <key>9</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.arguments.begin.edgeql</string>
              </dict>
            </dict>
            <key>endCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.arguments.end.edgeql</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#fncallargs</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>builtin-modules</key>
      <dict>
        <key>name</key>
        <string>support.other.module.builtin.edgeql</string>
        <key>match</key>
        <string>(?x) \b(?&lt;!::|\.|\.&lt;|\.&gt;)(
  cal | cfg | math | schema |
  std | stdgraphql | sys
)\b
</string>
      </dict>
      <key>builtin-types</key>
      <dict>
        <key>name</key>
        <string>support.type.builtin.edgeql</string>
        <key>match</key>
        <string>(?x) \b(?&lt;!\.|\.&lt;|\.&gt;) (
  BaseObject | Object | anyenum | anyfloat |
  anyint | anynumeric | anyreal | anyscalar |
  anytype | array | bigint | bool |
  bytes | datetime | decimal | duration |
  enum | float32 | float64 | int16 |
  int32 | int64 | json | local_date |
  local_datetime | local_time | sequence | str |
  tuple | uuid
)\b
</string>
      </dict>
      <key>builtins</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>support.function.builtin.edgeql</string>
            <key>match</key>
            <string>(?x) \b(?&lt;!\.|\.&lt;|\.&gt;) (
  abs | advisory_lock | advisory_unlock |
  advisory_unlock_all | all | any |
  array_agg | array_get | array_join |
  array_unpack | bytes_get_bit | ceil |
  contains | count | date_get |
  datetime_current | datetime_get | datetime_of_statement |
  datetime_of_transaction | datetime_truncate | duration_to_seconds |
  duration_truncate | enumerate | find |
  floor | get_current_database | get_transaction_isolation |
  get_version | get_version_as_str | json_array_unpack |
  json_get | json_object_unpack | json_typeof |
  len | lg | ln |
  log | max | mean |
  min | random | re_match |
  re_match_all | re_replace | re_test |
  round | sleep | stddev |
  stddev_pop | str_lower | str_lpad |
  str_ltrim | str_pad_end | str_pad_start |
  str_repeat | str_rpad | str_rtrim |
  str_split | str_title | str_trim |
  str_trim_end | str_trim_start | str_upper |
  sum | time_get | to_bigint |
  to_datetime | to_decimal | to_duration |
  to_float32 | to_float64 | to_int16 |
  to_int32 | to_int64 | to_json |
  to_local_date | to_local_datetime | to_local_time |
  to_str | uuid_generate_v1mc | var |
  var_pop
)(?=\s*\()\b
</string>
          </dict>
          <dict>
            <key>name</key>
            <string>support.function.constraint.builtin.edgeql</string>
            <key>match</key>
            <string>(?x) \b(?&lt;!\.|\.&lt;|\.&gt;) (
  constraint | exclusive | expression |
  len_value | max_ex_value | max_len_value |
  max_value | min_ex_value | min_len_value |
  min_value | one_of | regexp
)\b
</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#builtin-modules</string>
          </dict>
          <dict>
            <key>name</key>
            <string>support.other.link.builtin.edgeql</string>
            <key>match</key>
            <string>(?x) \b(
  __source__ | __std__ | __subject__ |
  __type__
)\b
</string>
          </dict>
        </array>
      </dict>
    </dict>
  </dict>
</plist>
